worker_processes 2;

events {
  worker_connections 1024;
}

error_log logs/error.log notice;

http {
  access_log off;

  keepalive_timeout 65;

  include resolvers.conf;

  #lua_ssl_trusted_certificate "root-certs.pem";
  #lua_ssl_verify_depth 2;
  lua_package_path "$prefix/lualib/?.lua;$prefix/lualib/?/init.lua;$prefix/lualib-common/?.lua;$prefix/lualib-common/?/init.lua;;";

  lua_code_cache off; # TODO: Enable on production!

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
    -- TODO: Docs say init_worker_by_lua_block should be used instead of this
    local uuid = require "resty.jit-uuid"
    uuid.seed()
  ';

  # TODO: Find out why this does not work
  init_worker_by_lua_block {
    local uuid = require 'resty.jit-uuid'
    uuid.seed()
  }

  server {
    listen 8080;
    include mime.types;
    default_type application/json;

    location = /api/v1/ {
      content_by_lua_file 'api/index.lua';
    }

    # TODO: Only POST
    location = /api/v1/register {
      content_by_lua_file 'api/register.lua';
    }

    # TODO: Only POST
    location = /api/v1/reset {
      content_by_lua_file 'api/reset.lua';
    }

    # TODO: Only POST
    location = /api/v1/patch {
      content_by_lua_file 'api/patch.lua';
    }

    location ~ ^/api/v1/go/([^/]+)$ {
      content_by_lua_file 'api/game-object.lua';
    }

    # TODO: Only POST
    location ~ ^/api/v1/go/([^/]+)/act/([^/]+)$ {
      content_by_lua_file 'api/initiate-action.lua';
    }

    location / {
      index index.html;
      root static/;
    }
  }
}
